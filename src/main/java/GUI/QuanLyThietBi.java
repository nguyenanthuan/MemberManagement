/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import BLL.BLL_LoaiThietBi;
import BLL.BLL_ThietBi;
import DTO.DTO_LoaiThietBi;
import DTO.DTO_ThietBi;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author User
 */
public class QuanLyThietBi extends javax.swing.JFrame {
    BLL_ThietBi thietbiBLL =new BLL_ThietBi();
    DefaultTableModel model;
    DTO_ThietBi ThietBiDuocChon;
    BLL_LoaiThietBi BLLLoaiThietBi = new BLL_LoaiThietBi();
    String excelFile="";
    private javax.swing.JFileChooser jFileChooser1;

    /**
     * Creates new form QuanLyThietBi
     */
    public QuanLyThietBi() {
        
        initComponents();
         model= (DefaultTableModel) jTable1.getModel();
         showLoaiThietBi();
         loaithietbiCbb.setSelectedIndex(0);
        loadEquipment();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        maTB = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tenThietBi = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ghiChu = new javax.swing.JTextArea();
        updatebtn = new javax.swing.JButton();
        deletebtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        loaiThietBi = new javax.swing.JLabel();
        loaithietbi = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        search = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        loaithietbiCbb = new javax.swing.JComboBox<>();
        deleteByCondition = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        addExcelBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Quản lý thiết bị");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Thông tin chi tiết");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel3.setText("Mã thiết bị :");

        maTB.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel5.setText("Tên thiết bị :");

        tenThietBi.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel6.setText("Ghi chú :");

        ghiChu.setColumns(20);
        ghiChu.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        ghiChu.setLineWrap(true);
        ghiChu.setRows(5);
        jScrollPane1.setViewportView(ghiChu);

        updatebtn.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        updatebtn.setText("Cập nhật");
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });

        deletebtn.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        deletebtn.setText("Xóa thiết bị");
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel4.setText("Loại thiết bị :");

        loaiThietBi.setToolTipText("");

        loaithietbi.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(maTB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tenThietBi))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(deletebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(updatebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(loaithietbi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(loaiThietBi)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(maTB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(loaiThietBi, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(loaithietbi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tenThietBi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(deletebtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updatebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(110, Short.MAX_VALUE))
        );

        jComboBox1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã thiết bị", "Tên thiết bị" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        search.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel7.setText("Tìm kiếm :");

        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã thiết bị", "Loại thiết bị", "Tên thiết bị", "Ghi chú"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.setShowGrid(true);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel8.setText("Loại Thiết Bị");

        loaithietbiCbb.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        loaithietbiCbb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loaithietbiCbbActionPerformed(evt);
            }
        });

        deleteByCondition.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        deleteByCondition.setText("Xóa thiết bị theo loại");
        deleteByCondition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteByConditionActionPerformed(evt);
            }
        });

        btnThem.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnThem.setText("Thêm mới thiết bị");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 1, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnThem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(loaithietbiCbb, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deleteByCondition, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(search)
                        .addComponent(jComboBox1))
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(loaithietbiCbb)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deleteByCondition, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnThem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        addExcelBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/download.png"))); // NOI18N
        addExcelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addExcelBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(216, 216, 216)
                        .addComponent(addExcelBtn)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(addExcelBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        showDetailEquipment();
    }//GEN-LAST:event_jTable1MouseReleased

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        Detail addEquipment = new Detail(null,true);
        addEquipment.setVisible(true);
        loadEquipment();
    }//GEN-LAST:event_btnThemActionPerformed

    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
        if (!maTB.getText().trim().equals(""))
                {
        if (!(ThietBiDuocChon.getMoTaTB().trim().equals(ghiChu.getText().trim()))||(!ThietBiDuocChon.getTenTB().trim().equals(tenThietBi.getText().trim())))
        {
        int output = JOptionPane.showConfirmDialog(this,"Sửa thiết bị này ?","",JOptionPane.YES_NO_OPTION);
        if (output == JOptionPane.YES_OPTION)
        {
            updateEquipmentGUI();
            JOptionPane.showMessageDialog(this,"Sửa thiết bị thành công !");
            loadEquipment();
            resetUpdateForm();
        }
        }
                }
   
    }//GEN-LAST:event_updatebtnActionPerformed

    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed
       if (!maTB.getText().trim().equals(""))
                {
       
        int output = JOptionPane.showConfirmDialog(this,"Xóa thiết bị này ?","",JOptionPane.YES_NO_OPTION);
        if (output == JOptionPane.YES_OPTION)
        {
            String str=thietbiBLL.deleteEquipment(ThietBiDuocChon.getMaTB());
            JOptionPane.showMessageDialog(this,str);
            loadEquipment();
            resetUpdateForm();
        }
        
                }
        
    }//GEN-LAST:event_deletebtnActionPerformed

    private void deleteByConditionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteByConditionActionPerformed
       int maLTB=0;
        if (loaithietbiCbb.getSelectedIndex()==0)
        {
            maLTB=0;
        int output = JOptionPane.showConfirmDialog(this,"Xóa hết tất cả thiết bị ?","",JOptionPane.YES_NO_OPTION);
        if (output == JOptionPane.YES_OPTION)
        {
            List lThietBi=thietbiBLL.listEquipment(maLTB,"","");
             for (Iterator iterator = lThietBi.iterator(); iterator.hasNext();) {
                DTO_ThietBi thietbi = (DTO_ThietBi) iterator.next();
                thietbiBLL.deleteEquipment(thietbi.getMaTB());
             }
        }
        }
        else 
        {
        maLTB= Integer.valueOf(String.valueOf(loaithietbiCbb.getSelectedItem().toString().trim().charAt(0)));
        int output = JOptionPane.showConfirmDialog(this,"Xóa các thiết bị có mã quy định = "+maLTB+" ?","",JOptionPane.YES_NO_OPTION);
        if (output == JOptionPane.YES_OPTION)
        {
            List lThietBi=thietbiBLL.listEquipment(maLTB,"","");
            for (Iterator iterator = lThietBi.iterator(); iterator.hasNext();) {
                DTO_ThietBi thietbi = (DTO_ThietBi) iterator.next();
                thietbiBLL.deleteEquipment(thietbi.getMaTB());
             }
        }
        
        }
        loadEquipment();
    }//GEN-LAST:event_deleteByConditionActionPerformed

    private void loaithietbiCbbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loaithietbiCbbActionPerformed
        loadEquipment();
    }//GEN-LAST:event_loaithietbiCbbActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
         loadEquipment();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void searchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyTyped
        loadEquipment();
    }//GEN-LAST:event_searchKeyTyped

    private void addExcelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addExcelBtnActionPerformed
        jFileChooser1 = new javax.swing.JFileChooser();
        jFileChooser1.setFileFilter(null);
         jFileChooser1.setAcceptAllFileFilterUsed (false);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel files","xlsx");
        jFileChooser1.addChoosableFileFilter(filter);
        jFileChooser1.setFileFilter(filter);
        int returnVal= jFileChooser1.showOpenDialog(this);
        jFileChooser1.setVisible(false);
        if (returnVal==JFileChooser.APPROVE_OPTION)
        {
            File selectedFile=jFileChooser1.getSelectedFile();
            excelFile=selectedFile.getAbsolutePath();
        }
        else
            excelFile="";
        if (excelFile.equals(""))
        {
            JOptionPane.showMessageDialog(this,"Bạn chưa chọn file nào cả ! ");
        }
        else
        {
       JOptionPane.showMessageDialog(this,"Bạn đã chọn file "+excelFile);
            try {
                String status=readFileExcel();
                JOptionPane.showMessageDialog(rootPane, status);
            } catch (IOException ex) {
                Logger.getLogger(QuanLyThietBi.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
       
    }//GEN-LAST:event_addExcelBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyThietBi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyThietBi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyThietBi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyThietBi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLyThietBi().setVisible(true);
            }
        });
    }
    
    public void loadEquipment()
    {
        model.setRowCount(0);
         int maLTB=0;
         String stringSearch="";
         String searchFor="CAST(maTB as string)";
        if (loaithietbiCbb.getSelectedIndex()==0)
        {
        maLTB=0;
        }
        else 
        maLTB= Integer.valueOf(String.valueOf(loaithietbiCbb.getSelectedItem().toString().trim().charAt(0)));
        int selectedSearch=jComboBox1.getSelectedIndex();
        if (selectedSearch==0)
            searchFor=" CAST(u.maTB as string) ";
        else searchFor="u.tenTB";
        stringSearch=search.getText().toString().trim();
            
        List listThietBi = thietbiBLL.listEquipment(maLTB,stringSearch,searchFor);
        for (Iterator iterator = listThietBi.iterator(); iterator.hasNext();) {
        DTO_ThietBi thietbi = (DTO_ThietBi) iterator.next();
        Object[] row={thietbi.getMaTB(),thietbi.getLoaiThietBi().getTenLoaiThietBi(),thietbi.getTenTB(),thietbi.getMoTaTB()};
             model.addRow(row);
        }
    }
    public void updateEquipmentGUI()
    {    
            thietbiBLL.updateEquipment(ThietBiDuocChon.getMaTB(),tenThietBi.getText().trim(),ghiChu.getText().trim());
        
    }
    
    public void showDetailEquipment()
    {
        int i=jTable1.getSelectedRow();
        if (i>=0)
        { 
            ThietBiDuocChon=thietbiBLL.findEquipmentByID(Integer.parseInt(jTable1.getValueAt(i, 0).toString()));
            maTB.setText(String.valueOf(ThietBiDuocChon.getMaTB()));
            loaithietbi.setText(ThietBiDuocChon.getLoaiThietBi().getTenLoaiThietBi());
            tenThietBi.setText(ThietBiDuocChon.getTenTB());
            ghiChu.setText(ThietBiDuocChon.getMoTaTB());
           
        }
    }
    public void showLoaiThietBi()
    {
        List listLTB = BLLLoaiThietBi.listLoaiThietBi();
        loaithietbiCbb.addItem("Tất cả");
        for (Iterator iterator = listLTB.iterator(); iterator.hasNext();) {
        DTO_LoaiThietBi loaithietbi = (DTO_LoaiThietBi) iterator.next();
        loaithietbiCbb.addItem(loaithietbi.toString());
        }
    }
    public void resetUpdateForm()
    {
         maTB.setText("");
            loaithietbi.setText("");
            tenThietBi.setText("");
            ghiChu.setText("");
  
    }
    public int getRowCount() throws FileNotFoundException, IOException
    {
        int countRow=0;
         File file = new File(excelFile);   //creating a new file instance  
        FileInputStream fis = new FileInputStream(file);   //obtaining bytes from the file  
        //creating Workbook instance that refers to .xlsx file  
        XSSFWorkbook wb = new XSSFWorkbook(fis);   
        XSSFSheet sheet = wb.getSheetAt(0);     //creating a Sheet object to retrieve object  
        Iterator<Row> itr = sheet.iterator();    //iterating over excel file  
        while (itr.hasNext())                 
        {  
        Row row = itr.next();  
        countRow=countRow+1;
        }  
        return countRow;
    }
    public int getColumnCount() throws FileNotFoundException, IOException
    {
        int countColumn=0;
         File file = new File(excelFile);   //creating a new file instance  
        FileInputStream fis = new FileInputStream(file);   //obtaining bytes from the file  
        //creating Workbook instance that refers to .xlsx file  
        XSSFWorkbook wb = new XSSFWorkbook(fis);   
        XSSFSheet sheet = wb.getSheetAt(0);     //creating a Sheet object to retrieve object  
        Row row=sheet.getRow(0);
        try
        {
        Iterator<Cell> cellIterator = row.cellIterator();
        while (cellIterator.hasNext())   
        {  
        Cell cell = cellIterator.next(); 
        countColumn=countColumn+1;
        }
        }
        catch (NullPointerException e)
        {
            return 0;
        }
        return countColumn;
    }
    public String readFileExcel() throws FileNotFoundException, IOException
    {
            try  
            {  
                int row= this.getRowCount();
                int column=this.getColumnCount();
                if ((column!=3)||(row==0))
                    return "File excel không đúng định dạng !";
                   for (int i=1;i<row;i++)
                   {     
                       String maTB=readCellData(i,0);
                       String tenTB=readCellData(i,1);
                       String motaTB=readCellData(i,2);
                       if ((maTB==null)||(tenTB==null)||motaTB==null)
                       {
                           return "File excel không đúng định dạng !";
                       }
                       else
                       {
                       thietbiBLL.addEquipmentExcel(Integer.valueOf(maTB),tenTB, motaTB);
                       }
                   }
            }  
            catch(Exception e)  
            {  
            e.printStackTrace();  
            }  
            loadEquipment();
            return "Nhập dữ liệu từ file excel thành công !";
    }  
    public String readCellData(int vRow, int vColumn)  
{  
        String value=null;          //variable for storing the cell value  
        Workbook wb=null;           //initialize Workbook null  
        try  
        {  
        //reading data from a file in the form of bytes  
        FileInputStream fis=new FileInputStream(excelFile);  
        //constructs an XSSFWorkbook object, by buffering the whole stream into the memory  
        wb=new XSSFWorkbook(fis);  
        }  
        catch(FileNotFoundException e)  
        {  
        e.printStackTrace();  
        }  
        catch(IOException e1)  
        {  
        e1.printStackTrace();  
        }  
        Sheet sheet=(Sheet) wb.getSheetAt(0);   //getting the XSSFSheet object at given index  
        Row row=sheet.getRow(vRow);
        Cell cell=row.getCell(vColumn); //getting the cell representing the given column  
        try
        {
        value=cell.getStringCellValue();    //getting cell value  
        }
        catch (IllegalStateException e)
                {
                value=String.valueOf((int) cell.getNumericCellValue());
                }
        catch (NullPointerException el)
                {
                   return null;
                }
        return value;               //returns the cell value  
}  

    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addExcelBtn;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton deleteByCondition;
    private javax.swing.JButton deletebtn;
    private javax.swing.JTextArea ghiChu;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel loaiThietBi;
    private javax.swing.JLabel loaithietbi;
    private javax.swing.JComboBox<String> loaithietbiCbb;
    private javax.swing.JLabel maTB;
    private javax.swing.JTextField search;
    private javax.swing.JTextField tenThietBi;
    private javax.swing.JButton updatebtn;
    // End of variables declaration//GEN-END:variables
}
